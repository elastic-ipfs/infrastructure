# This GitHub Actions Workflow will enforce best practices with PRs
# The following tests are performed on each new PR:
#   1. Verify PR title complies with our standard

# For the PR title compliance:
#   Leverages an external GitHub Action: https://github.com/marketplace/actions/pull-request-title-rules
#
#   Functionality:
#   This workflow checks if the PR title matches the following pattern:
#     ^\[(WIP|READY|REVIEW|WAIT)\]\ -\ \[[A-Z]+[0-9]?-\d+\]\ -\ .+
#
#   Meaning PRs must abid by the following syntax:
#     [WIP|READY|REVIEW|WAIT] - [ISSUE-NUMBER] - Some Title
#

name: PR Verifier

on:
  pull_request:
    # Required by GitHub Action; this make sure this workflow is fired off every time the PR is updated
    types: [opened, edited, synchronize, reopened]

jobs:

  pr-title:
    runs-on: ubuntu-latest

    steps:
      - name: Verify PR Title
        uses: deepakputhraya/action-pr-title@v1.0.1
        with:
          regex: '^\[(WIP|READY|REVIEW|WAIT)\]\ -\ \[[A-Z]+[0-9]?-\d+\]\ -\ .+'
        continue-on-error: false

  add_comment:
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
    - name: Add comment with button options
      uses: octokit/request-action@v2.x       
      with:
        route: POST /repos/{repo}/pulls/{pull_request_number}/reviews
        repo: ${{ github.repository }}
        pull_request_number: ${{ github.event.pull_request.number }}
        # body: '{"body": "This is an example comment with buttons. Choose an action: - [Action 1](/action/1) - [Action 2](/action/2)", "event": "COMMENT"}'
        # body: "This is an example comment with buttons. Choose an action"
        body: ${{ toJSON(env.REQUEST_BODY) }}
        event: "COMMENT"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REQUEST_BODY: |
          Multi-line string with *special* characters:
          - "'`

  perform_action_1:
    runs-on: ubuntu-latest
    needs: add_comment
    if: contains(github.event.comment.body, '/action/1')
    steps:
      - name: Perform action 1
        run: echo "Performing action 1..."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  perform_action_2:
    runs-on: ubuntu-latest
    needs: add_comment
    if: contains(github.event.comment.body, '/action/2')
    steps:
      - name: Perform action 2
        run: echo "Performing action 2..."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
